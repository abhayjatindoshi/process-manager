let ProcessStatus=Object.freeze({INPROGRESS:"INPROGRESS",SUCCESS:"SUCCESS",FAILED:"FAILED"});class Process{constructor(s){if(s instanceof Function)this._promise=new Promise(s);else{if(!(s instanceof Promise))throw new TypeError("Invalid invoker passed for Process constructor");this._promise=s}this._status=ProcessStatus.INPROGRESS,this._promise.then(function(){this._status=ProcessStatus.SUCCESS}.bind(this),function(){this._status=ProcessStatus.FAILED}.bind(this))}then(s,t){return this._promise.then(s,t)}catch(s){return this._promise.catch(s)}getStatus(){return this._status}}class ProcessQueue{constructor(){this._status=ProcessStatus.INPROGRESS,this._promise=new Promise(function(s,t){this._resolve=s,this._reject=t}.bind(this)),this._processList=[],this._resolvedCount=0,this._successCount=0,this._failureCount=0,this._successCallback=function(){this._resolvedCount++,this._successCount++,this._resolvedCount==this._processList.length&&(0==this._failureCount?(this._status=ProcessStatus.SUCCESS,this._resolve()):(this._status=ProcessStatus.FAILED,this._reject()))}.bind(this),this._failureCallback=function(){this._resolvedCount++,this._failureCount++,this._resolvedCount==this._processList.length&&(this._status=ProcessStatus.FAILED,this._reject())}.bind(this)}push(s){if(!(s instanceof Process||s instanceof ProcessQueue))throw new TypeError("Invalid process type pushed to the queue");s.then(this._successCallback,this._failureCallback),this._processList.push(s)}then(s,t){return this._promise.then(s,t)}catch(s){return this._promise.catch(s)}getStatus(){return this._status}}class DecoratedProcess extends Process{constructor(s,t){super(s),this._div=document.createElement("div");let e=document.createElement("span");e.setAttribute("uk-spinner","ratio: .7"),this._div.appendChild(e),this._processTitle=document.createElement("span"),t&&(this._processTitle.innerText=" "+t),this._div.appendChild(this._processTitle),this._promise.then(function(){e.removeAttribute("uk-spinner"),e.classList.remove("uk-spinner"),e.setAttribute("uk-icon","icon: check"),this._div.classList.add("uk-text-success")}.bind(this)),this._promise.catch(function(){e.removeAttribute("uk-spinner"),e.classList.remove("uk-spinner"),e.setAttribute("uk-icon","icon: close"),this._div.classList.add("uk-text-danger")}.bind(this))}updateTitle(s){this._processTitle.innerText=" "+s}appendToElement(s){s.appendChild(this._div)}}class DecoratedProcessQueue extends ProcessQueue{constructor(s){super(),this._div=document.createElement("div");let t=document.createElement("div");this._div.appendChild(t);let e=document.createElement("span");e.setAttribute("uk-spinner","ratio: .7"),t.appendChild(e),this._processTitle=document.createElement("span"),s&&(this._processTitle.innerText=" "+s),t.appendChild(this._processTitle),this._processElements=document.createElement("div"),this._processElements.classList.add("uk-margin-medium-left"),this._div.appendChild(this._processElements),this._promise.then(function(){e.removeAttribute("uk-spinner"),e.classList.remove("uk-spinner"),e.setAttribute("uk-icon","icon: check"),this._div.classList.add("uk-text-success")}.bind(this)),this._promise.catch(function(){e.removeAttribute("uk-spinner"),e.classList.remove("uk-spinner"),e.setAttribute("uk-icon","icon: close"),this._div.classList.add("uk-text-danger")}.bind(this))}updateTitle(s){this._processTitle=" "+s}appendToElement(s){s.appendChild(this._div)}push(s){super.push(s),s.appendToElement(this._processElements)}}